Terminals unused in grammar

    REAL
    START
    END


Grammar

    0 $accept: program $end

    1 program: instList

    2 instList: instList inst
    3         | inst

    4 inst: IDENT ASSIGN E SEMICOLON
    5     | PRINT F SEMICOLON

    6 E: E PLUS T
    7  | T

    8 T: T MULT F
    9  | F

   10 F: INTEGER
   11  | IDENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <ival> (258) 10
    REAL <rval> (259)
    IDENT <sval> (260) 4 11
    START (261)
    END (262)
    ASSIGN (263) 4
    SEMICOLON (264) 4 5
    PRINT (265) 5
    PLUS (266) 6
    MULT (267) 8


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    program (14)
        on left: 1
        on right: 0
    instList (15)
        on left: 2 3
        on right: 1 2
    inst (16)
        on left: 4 5
        on right: 2 3
    E <ival> (17)
        on left: 6 7
        on right: 4 6
    T <ival> (18)
        on left: 8 9
        on right: 6 7 8
    F <ival> (19)
        on left: 10 11
        on right: 5 8 9


State 0

    0 $accept: • program $end

    IDENT  shift, and go to state 1
    PRINT  shift, and go to state 2

    program   go to state 3
    instList  go to state 4
    inst      go to state 5


State 1

    4 inst: IDENT • ASSIGN E SEMICOLON

    ASSIGN  shift, and go to state 6


State 2

    5 inst: PRINT • F SEMICOLON

    INTEGER  shift, and go to state 7
    IDENT    shift, and go to state 8

    F  go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: instList •
    2 instList: instList • inst

    IDENT  shift, and go to state 1
    PRINT  shift, and go to state 2

    $default  reduce using rule 1 (program)

    inst  go to state 11


State 5

    3 instList: inst •

    $default  reduce using rule 3 (instList)


State 6

    4 inst: IDENT ASSIGN • E SEMICOLON

    INTEGER  shift, and go to state 7
    IDENT    shift, and go to state 8

    E  go to state 12
    T  go to state 13
    F  go to state 14


State 7

   10 F: INTEGER •

    $default  reduce using rule 10 (F)


State 8

   11 F: IDENT •

    $default  reduce using rule 11 (F)


State 9

    5 inst: PRINT F • SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 instList: instList inst •

    $default  reduce using rule 2 (instList)


State 12

    4 inst: IDENT ASSIGN E • SEMICOLON
    6 E: E • PLUS T

    SEMICOLON  shift, and go to state 16
    PLUS       shift, and go to state 17


State 13

    7 E: T •
    8 T: T • MULT F

    MULT  shift, and go to state 18

    $default  reduce using rule 7 (E)


State 14

    9 T: F •

    $default  reduce using rule 9 (T)


State 15

    5 inst: PRINT F SEMICOLON •

    $default  reduce using rule 5 (inst)


State 16

    4 inst: IDENT ASSIGN E SEMICOLON •

    $default  reduce using rule 4 (inst)


State 17

    6 E: E PLUS • T

    INTEGER  shift, and go to state 7
    IDENT    shift, and go to state 8

    T  go to state 19
    F  go to state 14


State 18

    8 T: T MULT • F

    INTEGER  shift, and go to state 7
    IDENT    shift, and go to state 8

    F  go to state 20


State 19

    6 E: E PLUS T •
    8 T: T • MULT F

    MULT  shift, and go to state 18

    $default  reduce using rule 6 (E)


State 20

    8 T: T MULT F •

    $default  reduce using rule 8 (T)
